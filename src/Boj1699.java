public class Boj1699 {
    public static void main(String[] args) {
        // 1. Read natural number N

        // N을 입력받는다.
        // int i 1 ~ i * i <= N이 될 때까지의 값을
        // 배열에 담는다.

        // 2. Find the answer
        // 경우의 수를 나눈다? 최소 개수 dp로 접근한다. dp size = N

        // 첫 번째 항으로 만들 수 있는 최소 개수 -> 항상 같은 값이다.

        // 두 번째 항으로 만들 수 있는 최소 개수
        // -> a. 두 번째 항으로 나누어 떨어지는 경우
        // -> b. 그렇지 않다면, 두 번째 항 * n + 첫 번째 항(나머지)

        // 세 번째 항으로 만들 수 있는 최소 개수
        // a. 세 번째 항으로 나누어 떨어지는 경우
        // b. 두 번째 항과 같이 사용하는 경우 -> 어떻게 되어야 하나??? 세 번째 항이 하나 들어가면
        // 그 것만큼 딱 떨어지는 값으로 뺄 수 있어야 함. 예를 들어서
        // 1, 4, 9 ????


        // 큰 숫자부터 알아본다?
        // index - 1 (반복문 1)
        // 남은 값 보다 작은 수를 찾는다. (반복문 2)
        // 찾고 나면, 그 수를 뺀 나머지를 매울 수 있는 수를 찾는다.(반복문 3)
        // 없으면 그 만큼 1로 보충한다.
        // 숫자들이 들어온 만큼 cnt 를 올려준다.

        // 반복하고 필요하면 갱신한다.





        // 3. Print the answer
    }
}
